sum(a, na.rm = F)
length_vector_0<- sum(a, na.rm = FALSE)
length_vector_0
vector_0<- groupss$V2==0
vector_0
vector_0<- groupss$V2!=0
length_vector_0<- sum(a, na.rm = TRUE)
length_vector_0
vector_0
vector_0<- groupss$V2==0
length_vector_0<- sum(vector_0, na.rm = TRUE)
length_vector_0
vector_0<- groupss$V2!=0
length_vector_0<- sum(vector_0, na.rm = TRUE)
length_vector_0
vector_0<- groupss$V2==0
length_vector_0<- sum(vector_0, na.rm = TRUE)
vector_zero<- groupss$V2==0
length_vector_zero<- sum(vector_zero, na.rm = TRUE)
length_vector_zero!=0
a<- cat(sprintf("#cccccc,"), file = fileConn)
rep(a, length_vector_zero)
qual_col_pals[i]-length_vector_zero
qual_col_pals<-c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02","#A6761D",
"#666666","#7FC97F","#BEAED4","#FDC086","#FFFF99","#386CB0","#F0027F","#BF5B17","#A6CEE3","#1F78B4",
"#B2DF8A","#33A02C","#FB9A99","#E31A1C","#FDBF6F","#FF7F00","#CAB2D6","#6A3D9A","#B15928","#FBB4AE","#B3CDE3",
"#CCEBC5","#DECBE4","#FED9A6","#FFFFCC","#E5D8BD","#FDDAEC","#F2F2F2","#B3E2CD","#FDCDAC","#CBD5E8","#F4CAE4","#E6F5C9",
"#FFF2AE","#F1E2CC","#CCCCCC","#E41A1C","#377EB8","#4DAF4A","#984EA3","#FFFF33","#A65628","#F781BF","#999999","#66C2A5",
"#FC8D62","#8DA0CB","#E78AC3","#A6D854","#FFD92F","#E5C494","#B3B3B3","#8DD3C7","#FFFFB3","#BEBADA","#FB8072","#80B1D3",
"#FDB462","#B3DE69","#FCCDE5","#D9D9D9","#BC80BD","#095F02")
qual_col_pals[5]-length_vector_zero
qual_col_pals[5]
qual_col_pals[1:5]
qual_col_pals[1:5]-length_vector_zero
length_vector_zero
qual_col_pals[2]-1
qual_col_pals[2]
qual_col_pals[1:5-length_vector_zero]
length_vector_zero
1:5
1:5-length_vector_zero
length_vector_zero
[1:5]-length_vector_zero
(1:5)-length_vector_zero
x <- length(3)-length_vector_zero
x
length_vector_zero
length(3)
x <- 3-length_vector_zero
x
x <- as.integer(3)-length_vector_zero
x
as.integer(i)
x <- as.integer(i)-length_vector_zero
x
i
nrowannot
qual_col_pals[1:5]
vector_zero
vector_zero<- groupss==0
vector_zero
length_vector_zero<- sum(vector_zero, na.rm = TRUE)
length_vector_zero
vector_zero<- groupss$V1==0
length_vector_zero<- sum(vector_zero, na.rm = TRUE)
length_vector_zero
runApp()
length_vector_zero
length_vector_zero
vector_zero<- groupss$V2==0
length_vector_zero<- sum(vector_zero, na.rm = TRUE)
length_vector_zero
class(length_vector_zero)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
0:i
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if(length_vector_zero!=0){
a<- cat(sprintf("\"#cccccc\","), file = fileConn)
rep(a, length_vector_zero)}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Groupss
groupss
members_with_zeros
members_with_NA_groups
nodes
# print(members_with_NA_groups)
nodes <- unique(members_with_NA_groups$id)
nodes
genes <- strsplit(annotation1[s[i], 2], ",")$Nodes
runApp()
runApp()
runApp()
runApp()
runApp()
annots
which(annotation1[s] %in% Groupss[[i]][j])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
integer(0)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pie_to_be_colored<-c(rep(F,length(nodes)))
pie_to_be_colored
a<-(1,2,3,4,5)
a<-c(1,2,3,4,5)
b<-c(6,7,8,9)
a %in% b
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Groupss
choices<-c(2,3,4)
elements<-c(1,5,6,7)
id.element(elements, choices)
is.element(elements, choices)
elements %in% choices
elements<-c(1,2,5,6,7)
is.element(elements, choices)
elements %in% choices
choices %in% elements
any (is.element(elements, choices))
any (is.element(elements, choices))
elements<-c(1,5,6,7)
any (is.element(elements, choices))
runApp()
elements<-c(1,5,6,7)
choices<-c(2,3,4)
any(is.element(elements,choices))
elements<-c(1,4,5,6,7)
any(is.element(elements,choices))
runApp()
runApp()
runApp()
runApp()
runApp()
elements<-c(1,4,5,6,7)
choices<-c(2,3,4)
intersection(elements,choices)
intersect(elements,choices)
runApp()
runApp()
groupss$V2==0
vector_zero<- groupss$V2==0
length_vector_zero<- sum(vector_zero, na.rm = TRUE)
length_vector_zero
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nodes <- data.frame(id=c(1,2,3,4),group=c("A","A","A","A"),value=c(2,2,2,2))
edges <- data.frame(from=c(1,1,2),to=c(2,3,4),arrows=c("to","to","to"))
visNetwork(nodes,edges)
edges <- data.frame(from=c(1,1,2),to=c(2,3,4),arrows=c("to","to","to"))
visNetwork(nodes,edges)
edges <- data.frame(from=c(1,1,2),to=c(2,3,4),arrows=NULL)
edges <- data.frame(from=c(1,1,2),to=c(2,3,4),arrows="middle")
visNetwork(nodes,edges)
edges <- data.frame(from=c(1,1,2),to=c(2,3,4))
visNetwork(nodes,edges)
runApp()
runApp()
runApp()
runApp()
runApp()
nodes <- data.frame(id = 1:3, label=2014:2016 ,value=1:3,shape='circle')
edges <- data.frame(from = c(1,2), to = c(1,3))
nodes <- data.frame(id = 1:3, label=c(20,154,2016) ,value=1:3,shape='circle')
edges <- data.frame(from = c(1,2), to = c(1,3))
visNetwork(nodes,edges)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
expression<-read.delim("string_expression_colors.txt", header = F)
expression
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
# print(expression)
cg<- as.character(expression$color)
cg_fill<- adjustcolor(cg, alpha.f = 0.5)}
cg
cg_fill
cg_fill<- adjustcolor(cg, alpha.f = 0.5)}
cg_fill
express_order
# expression<-read.delim("string_expression_colors.txt", header = F)
expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
express_order
colnames(express_order) <- "id"
express_order
expression<-inner_join(express_order, expression, by = "id")
expression
# print(expression)
expression$color[expression$color== "red"] <- 2
# print(expression)
a<- expression$color[expression$color== "red"] <- 2
a
a<- expression$color[expression$color== red] <- 2
a
expression$color[expression$color== red] <- 2
expression
expression$color[expression$color== "red"] <- 2
expression
expression<-read.delim("string_expression_colors.txt", header = F)
# expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
expression$color[expression$color== red] <- 2
expression
expression$color[expression$color== red] <- "2"
expression
expression$color[expression$color== "red"] <- "2"
expression
is.na(expression)<- 2
expression
expression<-read.delim("string_expression_colors.txt", header = F)
# expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
expression$color == "red"
# print(expression)
for (i in length(expression$color)){
if(expression$color == "red"){
expression$color[i] <- 2
}
}
expression
# print(expression)
for (i in 1:length(expression$color)){
if(expression$color == "red"){
expression$color[i] <- "2"
}
}
expression
expression<-read.delim("string_expression_colors.txt", header = F)
# expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
# print(expression)
expression$color[which(expression$color=="red")] <- "2"
expression<-read.delim("string_expression_colors.txt", header = F)
# expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
# print(expression)
expression$color<- as.character(expression$color)
expression$color[which(expression$color=="red")] <- "2"
expression
expression<-read.delim("string_expression_colors.txt", header = F)
# expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
# print(expression)
expression$color<- as.character(expression$color)
expression$color[which(expression$color=="blue")] <- "1"
expression$color[which(expression$color=="orange")] <- "2"
expression$color[which(expression$color=="green")] <- "3"
expression$color[which(expression$color=="red")] <- "4"
expression$color[which(expression$color=="purple")] <- "5"
expression
expression<-read.delim("string_expression_colors.txt", header = F)
# expression<-fetchFirstSelectedStoredExpression()
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
# print(expression)
expression$color<- as.character(expression$color)
expression$color[which(expression$color=="blue")] <- "1"
expression$color[which(expression$color=="orange")] <- "3"
expression$color[which(expression$color=="green")] <- "5"
expression$color[which(expression$color=="red")] <- "7"
expression$color[which(expression$color=="purple")] <- "9"
expression$color[which(expression$color=="gray")] <- "16"
expression
expression<- as.data.frame(members_with_NA_groups)
expression<- as.data.frame(unique(expression$id))
expression<-read.delim("string_expression_colors.txt", header = F)
expression<- as.data.frame(members_with_NA_groups)
expression<- as.data.frame(unique(expression$id))
expression$color <- rep(c("16"))
colnames(expression) <- c("id", "color")
expression
runApp()
runApp()
expression
runApp()
runApp()
runApp()
expression
expression<-read.delim("string_expression_colors.txt", header = F)
expression
colnames(expression) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expression<-inner_join(express_order, expression, by = "id")
# print(expression)
expression$color<- as.character(expression$color)
expression$color[which(expression$color=="blue")] <- "1"
expression$color[which(expression$color=="orange")] <- "3"
expression$color[which(expression$color=="green")] <- "5"
expression$color[which(expression$color=="red")] <- "7"
expression$color[which(expression$color=="purple")] <- "9"
expression$color[which(expression$color=="gray")] <- "16"
print(expression$color)
print(expression)
expression<-read.delim("string_expression_colors.txt", header = F)
expression<- as.data.frame(members_with_NA_groups)
expression<- as.data.frame(unique(expression$id))
expression$color <- rep(c("16"))
colnames(expression) <- c("id", "color")
print(expression)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
expressions_pies<-read.delim("string_expression_colors.txt", header = F)
colnames(expressions_pies) <- c("id", "color")
express_order<- as.data.frame(members_with_NA_groups)
express_order<- as.data.frame(unique(express_order$id))
colnames(express_order) <- "id"
expressions_pies<-inner_join(express_order, expressions_pies, by = "id")
# print(expressions_pies)
expressions_pies$color<- as.character(expressions_pies$color)
expressions_pies$color[which(expressions_pies$color=="blue")] <- "0"
expressions_pies$color[which(expressions_pies$color=="orange")] <- "2"
expressions_pies$color[which(expressions_pies$color=="green")] <- "4"
expressions_pies$color[which(expressions_pies$color=="red")] <- "6"
expressions_pies$color[which(expressions_pies$color=="purple")] <- "8"
expressions_pies$color[which(expressions_pies$color=="gray")] <- "15"
print(expressions_pies)
expressions_pies<-read.delim("string_expression_colors.txt", header = F)
expressions_pies<- as.data.frame(members_with_NA_groups)
expressions_pies<- as.data.frame(unique(expressions_pies$id))
expressions_pies$color <- rep(c("16"))
colnames(expressions_pies) <- c("id", "color")
expressions_pies
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
group_pal_rows<- function(n){
qual_col_pals<-c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E","#E6AB02","#A6761D",
"#666666","#7FC97F","#BEAED4","#FDC086","#FFFF99","#386CB0","#F0027F","#BF5B17","#A6CEE3","#1F78B4",
"#B2DF8A","#33A02C","#FB9A99","#E31A1C","#FDBF6F","#FF7F00","#CAB2D6","#6A3D9A","#B15928","#FBB4AE","#B3CDE3",
"#CCEBC5","#DECBE4","#FED9A6","#FFFFCC","#E5D8BD","#FDDAEC","#F2F2F2","#B3E2CD","#FDCDAC","#CBD5E8","#F4CAE4","#E6F5C9",
"#FFF2AE","#F1E2CC","#CCCCCC","#E41A1C","#377EB8","#4DAF4A","#984EA3","#FFFF33","#A65628","#F781BF","#999999","#66C2A5",
"#FC8D62","#8DA0CB","#E78AC3","#A6D854","#FFD92F","#E5C494","#B3B3B3","#8DD3C7","#FFFFB3","#BEBADA","#FB8072","#80B1D3",
"#FDB462","#B3DE69","#FCCDE5","#D9D9D9","#BC80BD","#095F02")
if(n>=70){
qual_col_pals<-c(qual_col_pals, rep(c("grey50"), times = (n-70) ))
nn<-  qual_col_pals[1:n]
nnames<-c(nn)
}
else
{
nn<-  qual_col_pals[1:n]
nnames<-c(nn)
}
}
runApp()
runApp()
runApp()
runApp()
